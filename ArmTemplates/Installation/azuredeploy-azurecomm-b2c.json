{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "10.13.0.0",
    "metadata": {
        "description": "Installs the Cosmos CMS integrated with Azure Email Communication Services."
    },
    "parameters": {
        "administratorReplyEmail": {
            "type": "string",
            "metadata": {
                "description": "The 'no reply' email address from your Azure 'Email Communication Services Domain'."
            }
        },
        "azureCommunicationsConnectionString": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "If you are using Azure Communications for email, enter connection string."
            }
        },
        "webAppPlanChoice": {
            "type": "string",
            "defaultValue": "Premium Tier",
            "allowedValues": [ "Free Tier", "Basic Tier", "Premium Tier" ],
            "metadata": {
                "description": "This is the App Plan size--which can be changed later."
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Locally-redundant storage",
            "allowedValues": [
                "Locally-redundant storage",
                "Geo-redundant storage"
            ],
            "metadata": {
                "description": "Storage account type."
            }
        },
        "usePasswordlessDbConnections": {
            "type": "bool",
            "defaultValue": false,
            "allowedValues": [true, false],
            "metadata": {
                "description": "Use passwordless connection to database."
            }
        },
        "AzureB2CDomain": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Entra ID B2C domain (example: 'mydomain.onmicrosoft.com')."
            }
        },
        "AzureB2CAdInstanceUrl": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "B2C instance (example: 'https://mydomain.b2clogin.com/')."
            }
        },
        "AzureB2CTenantId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "This is the Tenant Id."
            }
        },
        "AzureB2CClientId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "B2C Registered Application (client) ID."
            }
        },
        "AzureB2CClientSecret": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "B2C Registered Application Secret."
            }
        },
        "AzureB2CSignUpSignInPolicyId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Required sign up/sign in policy ID (example: 'B2C_1_Susi')."
            }
        },
        "AzureB2CResetPasswordPolicyId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional reset password policy ID (example: 'b2c_1_reset')."
            }
        },
        "AzureEditProfilePolicyId": {
             "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional edit profile policy ID (example: 'b2c_1_edit_profile')."
            }
        },
        "AzureB2CUserGroup": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of Entra ID 'group' that users must be a member."
            }
        }
    },
    "functions": [],
    "variables": {
        "allowLocalAccounts": "true",
        "adminEmail": "[parameters('administratorReplyEmail')]",
        "cosmosSendGridApiKey": "",
        "webAppPlanSku": "[concat(if(equals(parameters('webAppPlanChoice'), 'Free Tier'), 'F1', ''),if(equals(parameters('webAppPlanChoice'), 'Shared Tier'), 'D1', ''),if(equals(parameters('webAppPlanChoice'), 'Basic Tier'), 'B1', ''), if(equals(parameters('webAppPlanChoice'), 'Standard Tier'), 'S1', ''), if(equals(parameters('webAppPlanChoice'), 'Premium Tier'), 'P0v3', ''))]",
        "webAppTier": "[concat(if(equals(parameters('webAppPlanChoice'), 'Free Tier'), 'Free', ''),if(equals(parameters('webAppPlanChoice'), 'Shared Tier'), 'Shared', ''),if(equals(parameters('webAppPlanChoice'), 'Basic Tier'), 'Basic', ''),if(equals(parameters('webAppPlanChoice'), 'Standard Tier'), 'Standard', ''))]",
        "webAppFamily": "[concat(if(equals(parameters('webAppPlanChoice'), 'Free Tier'), 'F', ''),if(equals(parameters('webAppPlanChoice'), 'Shared Tier'), 'D', ''),if(equals(parameters('webAppPlanChoice'), 'Basic Tier'), 'B', ''),if(equals(parameters('webAppPlanChoice'), 'Standard Tier'), 'S', ''))]",
        "appServicePlanName": "[concat('appplan', uniquestring(resourceGroup().id))]",
        "location": "[resourceGroup().location]",
        "accountName": "[concat('cosmos', uniqueString(resourceGroup().id))]",
        "smtpEmailProviderOptions__Host": "",
        "smtpEmailProviderOptions__Port": "",
        "smtpEmailProviderOptions__EnableSsl":"",
        "smtpEmailProviderOptions__UserName": "",
        "smtpEmailProviderOptions__Password": "",
        "storageAccountName": "[concat('files', uniquestring(resourceGroup().id))]",
        "storageAccountType": "[parameters('storageAccountType')]",
        "editorName": "[concat('editor-', uniquestring(resourceGroup().id))]",
        "publisherName": "[concat('publisher-', uniquestring(resourceGroup().id))]",
        "databaseName": "cosmoscms",
        "azureCommunicationConnection": "[parameters('azureCommunicationsConnectionString')]"
    },
    "resources": [
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2022-05-15",
            "name": "[toLower(variables('accountName'))]",
            "location": "[variables('location')]",
            "properties": {
                "disableLocalAuth": "[parameters('usePasswordlessDbConnections')]",
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session"
                },
                "locations": [
                    {
                        "locationName": "[variables('location')]"
                    }
                ],
                "capabilities": [
                    {
                        "name": "EnableServerless"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
            "apiVersion": "2022-05-15",
            "name": "[format('{0}/{1}', toLower(variables('accountName')), variables('databaseName'))]",
            "properties": {
                "resource": {
                    "id": "[variables('databaseName')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', toLower(variables('accountName')))]"
            ]
        },
        {
            "name": "[variables('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-04-01",
            "tags": {},
            "location": "[resourceGroup().location]",
            "kind": "StorageV2",
            "sku": {
                "name": "[if(equals(variables('storageAccountType'), 'Locally-redundant storage'), 'Standard_LRS', 'Standard_RAGRS')]",
                "tier": "Standard"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-04-01",
            "name": "[format('{0}/default/{1}', variables('storageAccountName'), '$web')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-04-01",
            "name": "[format('{0}/default/{1}', variables('storageAccountName'), 'pkeys')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-04-01",
            "name": "[format('{0}/default/{1}', variables('storageAccountName'), 'ekeys')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2020-12-01",
            "name": "[variables('appServicePlanName')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "[variables('webAppPlanSku')]",
                "tier": "[variables('webAppTier')]",
                "size": "[variables('webAppPlanSku')]",
                "family": "[variables('webAppFamily')]",
                "capacity": 1
            },
            "kind": "linux",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-12-01",
            "name": "[variables('editorName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', toLower(variables('accountName')))]"
            ],
            "kind": "app,linux,container",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(variables('editorName'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(variables('editorName'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "linuxFxVersion": "DOCKER|toiyabe/cosmos-editor:latest",
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": true,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 1
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            },
            "resources": [
                {
                    "name": "appsettings",
                    "type": "config",
                    "apiVersion": "2020-12-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('editorName'))]"
                    ],
                    "tags": {
                        "displayName": "appsettings"
                    },
                    "properties": {
                        "AzureBlobStorageEndPoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2018-07-01').primaryEndpoints.web]",
                        "AdminEmail": "[variables('adminEmail')]",
                        "CosmosAllowSetup": "true",
                        "AllowLocalAccounts": "[variables('allowLocalAccounts')]",
                        "CosmosSendGridApiKey": "[variables('cosmosSendGridApiKey')]",
                        "CosmosPublisherUrl": "[concat('https://', variables('publisherName'), '.azurewebsites.net')]",
                        "CosmosBlobContainer": "$web",
                        "SmtpEmailProviderOptions__Host": "[variables('smtpEmailProviderOptions__Host')]",
                        "SmtpEmailProviderOptions__Port": "[variables('smtpEmailProviderOptions__Port')]",
                        "SmtpEmailProviderOptions__EnableSsl": "[variables('smtpEmailProviderOptions__EnableSsl')]",
                        "SmtpEmailProviderOptions__UserName": "[variables('smtpEmailProviderOptions__UserName')]",
                        "SmtpEmailProviderOptions__Password": "[variables('smtpEmailProviderOptions__Password')]",
                        "DOCKER_REGISTRY_SERVER_PASSWORD": "",
                        "DOCKER_REGISTRY_SERVER_URL": "https://index.docker.io",
                        "DOCKER_REGISTRY_SERVER_USERNAME": "",
                        "WEBSITES_ENABLE_APP_SERVICE_STORAGE": "false"
                    }
                },
                {
                    "name": "connectionStrings",
                    "type": "config",
                    "apiVersion": "2020-12-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('editorName'))]"
                    ],
                    "properties": {
                        "ApplicationDbContextConnection": {
                            "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('accountName')), '2019-12-12').connectionStrings[0].connectionString]",
                            "type": "Custom"
                        },
                        "AzureBlobStorageConnectionString": {
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',concat(listKeys(concat(resourceGroup().id,'/providers/Microsoft.Storage/storageAccounts/', variables('storageAccountName')),'2015-05-01-preview').key1))]",
                            "type": "Custom"
                        },
                        "AzureCommunicationConnection": {
                            "value": "[variables('azureCommunicationConnection')]",
                            "type": "Custom"
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2023-01-01",
            "name": "[concat(variables('editorName'), '/web')]",
            "location": "West US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('editorName'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "linuxFxVersion": "DOCKER|toiyabe/cosmos-editor:latest",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2022",
                "httpLoggingEnabled": true,
                "acrUseManagedIdentityCreds": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": true
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetRouteAllEnabled": false,
                "vnetPrivatePortsCount": 0,
                "localMySqlEnabled": false,
                "managedServiceIdentityId": 2703,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": true,
                "minTlsVersion": "1.2",
                "scmMinTlsVersion": "1.2",
                "ftpsState": "Disabled",
                "preWarmedInstanceCount": 0,
                "elasticWebAppScaleLimit": 0,
                "functionsRuntimeScaleMonitoringEnabled": false,
                "minimumElasticInstanceCount": 1,
                "azureStorageAccounts": {}
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-12-01",
            "name": "[variables('publisherName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', toLower(variables('accountName')))]"
            ],
            "kind": "app,linux,container",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(variables('publisherName'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(variables('publisherName'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "linuxFxVersion": "DOCKER|toiyabe/cosmos-publisher-b2c:latest",
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": true,
                    "http20Enabled": true,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 1,
                    "healthCheckPath": "/Identity/Account/Login"
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            },
            "resources": [
                {
                    "name": "appsettings",
                    "type": "config",
                    "apiVersion": "2020-12-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('publisherName'))]"
                    ],
                    "tags": {
                        "displayName": "appsettings"
                    },
                    "properties": {
                        "AdminEmail": "[variables('adminEmail')]",
                        "AllowLocalAccounts": "false",
                        "AzureBlobStorageEndPoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2018-07-01').primaryEndpoints.web]",
                        "AzureAd__UserGroup": "[parameters('AzureB2CUserGroup')]",
                        "AzureAd__TenantId": "[parameters('AzureB2CTenantId')]",
                        "AzureAd__SignUpSignInPolicyId": "[parameters('AzureB2CSignUpSignInPolicyId')]",
                        "AzureAd__SignedOutCallbackPath": "[concat('/signout/', parameters('AzureB2CSignUpSignInPolicyId'))]",
                        "AzureAd__ResetPasswordPolicyId": "[parameters('AzureB2CResetPasswordPolicyId')]",
                        "AzureAd__Instance": "[parameters('AzureB2CAdInstanceUrl')]",
                        "AzureAd__EnablePiiLogging": "True",
                        "AzureAd__EditProfilePolicyId": "[parameters('AzureEditProfilePolicyId')]",
                        "AzureAd__Domain": "[parameters('AzureB2CDomain')]",
                        "AzureAd__ClientSecret": "[parameters('AzureB2CClientSecret')]",
                        "AzureAd__ClientId": "[parameters('AzureB2CClientId')]",
                        "AzureAd__CallbackPath": "/signin-oidc",
                        "AzureAd__AdminGroup": "[parameters('AzureB2CUserGroup')]",
                        "CosmosRequiresAuthentication": "false",
                        "CosmosSendGridApiKey": "[variables('cosmosSendGridApiKey')]",
                        "SmtpEmailProviderOptions__Host": "[variables('smtpEmailProviderOptions__Host')]",
                        "SmtpEmailProviderOptions__Port": "[variables('smtpEmailProviderOptions__Port')]",
                        "SmtpEmailProviderOptions__EnableSsl": "[variables('smtpEmailProviderOptions__EnableSsl')]",
                        "SmtpEmailProviderOptions__UserName": "[variables('smtpEmailProviderOptions__UserName')]",
                        "SmtpEmailProviderOptions__Password": "[variables('smtpEmailProviderOptions__Password')]",
                        "DOCKER_REGISTRY_SERVER_PASSWORD": "",
                        "DOCKER_REGISTRY_SERVER_URL": "https://index.docker.io",
                        "DOCKER_REGISTRY_SERVER_USERNAME": "",
                        "WEBSITES_ENABLE_APP_SERVICE_STORAGE": "false"
                    }
                },
                {
                    "name": "connectionStrings",
                    "type": "config",
                    "apiVersion": "2020-12-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('publisherName'))]"
                    ],
                    "properties": {
                        "ApplicationDbContextConnection": {
                            "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('accountName')), '2019-12-12').connectionStrings[0].connectionString]",
                            "type": "Custom"
                        },
                        "AzureBlobStorageConnectionString": {
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',concat(listKeys(concat(resourceGroup().id,'/providers/Microsoft.Storage/storageAccounts/', variables('storageAccountName')),'2015-05-01-preview').key1))]",
                            "type": "Custom"
                        },
                        "AzureCommunicationConnection": {
                            "value": "[variables('azureCommunicationConnection')]",
                            "type": "Custom"
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2023-01-01",
            "name": "[concat(variables('publisherName'), '/web')]",
            "location": "West US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('publisherName'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "linuxFxVersion": "DOCKER|toiyabe/cosmos-publisher-b2c:latest",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2022",
                "httpLoggingEnabled": true,
                "acrUseManagedIdentityCreds": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": true,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": true
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetRouteAllEnabled": false,
                "vnetPrivatePortsCount": 0,
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": true,
                "minTlsVersion": "1.2",
                "scmMinTlsVersion": "1.2",
                "ftpsState": "Disabled",
                "preWarmedInstanceCount": 0,
                "elasticWebAppScaleLimit": 0,
                "healthCheckPath": "/Identity/Account/Login",
                "functionsRuntimeScaleMonitoringEnabled": false,
                "minimumElasticInstanceCount": 1,
                "azureStorageAccounts": {}
            }
        }
    ],
    "outputs": {}
}