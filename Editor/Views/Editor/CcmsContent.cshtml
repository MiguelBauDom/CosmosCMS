@using Microsoft.AspNetCore.Components
@model Cosmos.Common.Models.ArticleViewModel
@{
    Layout = null;
    ViewData["Title"] = Model.Title;

    var data = new ImportMapDefinition(
        new Dictionary<string, string>()
                                {
            { "ckeditor5", "/lib/ckeditor/ckeditor5.js" },
            { "ckeditor5/", "/lib/ckeditor/" },

            { "filelink", "/lib/cosmos/ckeditor/filelink/filelink.js" },
            { "filelink/", "/lib/cosmos/ckeditor/filelink/" },

            { "insertimage", "/lib/cosmos/ckeditor/insertimage/insertimage.js" },
            { "insertimage/", "/lib/cosmos/ckeditor/insertimage/" },

            { "pagelink", "/lib/cosmos/ckeditor/pagelink/pagelink.js" },
            { "pagelink/", "/lib/cosmos/ckeditor/pagelink/" },

            { "signalr", "/lib/cosmos/ckeditor/signalr/signalr.js" },
            { "signalr/", "/lib/cosmos/ckeditor/signalr/" },

            { "vscodeeditor", "/lib/cosmos/ckeditor/vscodeeditor/vscodeeditor.js" },
            { "vscodeeditor/", "/lib/cosmos/ckeditor/vscodeeditor/" },
                                },
        null,
        null);
}
<!DOCTYPE HTML>
<html lang="@Model.LanguageCode">
<head>
    <title>@Model.Title</title>
    <meta name="cwps-meta-path-title" content="@Model.Title" />
    <meta name="cwps-meta-path-url" content="@Model.UrlPath" />
    <meta name="cwps-meta-path-updated" content="@Model.Updated" />
    <style>
        figure.media {
            width: 640px;
        }

        .ck.ck-block-toolbar-button {
            transform: translateX( 30px ) translateY( -80px ) !important;
            background-color: white !important;
            border: 3px solid blue !important;
        }

    </style>
    @Html.Raw(Model.Layout.Head)
    <link asp-append-version="true" rel="stylesheet" href="https://cdn.ckeditor.com/ckeditor5/44.1.0/ckeditor5.css" />
    <link asp-append-version="true" href="~/lib/filepond/filepond.css" rel="stylesheet" />
    @Html.Raw(Model.HeadJavaScript)
    @Html.Raw(JavaScriptSnippet.FullScript)
    <link asp-append-version="true" href="~/lib/cosmos/image-widget/image-widget.css" rel="stylesheet" />
    <script asp-append-version="true" src="~/lib/filepond-plugin-file-metadata/dist/filepond-plugin-file-metadata.js"></script>
    <script asp-append-version="true" src="~/lib/filepond/filepond.js"></script>
    <script asp-append-version="true" src="~/lib/cosmos/dublicator/componets/components.js"></script>
    <script asp-append-version="true" src="~/lib/cosmos/dublicator/dublicator.js"></script>
</head>
<body>
    @Html.Raw(Model.Layout.HtmlHeader)
    <div ccms-content-id="@Model.Id">
        @Html.Raw(Model.Content)
    </div>
    @Html.Raw(Model.Layout.FooterHtmlContent)
    @Html.Raw(Model.FooterJavaScript)
    @Html.AntiForgeryToken()
    <script type="importmap" asp-importmap="@data">
    </script>
    <link href="~/lib/cropperjs/cropper.min.css" rel="stylesheet" asp-append-version="true" />
    <script src="~/lib/cropperjs/cropper.min.js" asp-append-version="true"></script>
    <script>

        // Create editors
        var ccms_editors = [];
        var ccms_editorIds = [];
        var focusedEditor;
        var unmoutCkBox;
        var articleNumber = @Model.ArticleNumber;
        var articleId = "@Model.Id";

        let autosaveTimeout = null;

        // Blur editors
        window.addEventListener('blur', function() {
            blurEditors();
        });

        // Blur editors
        function blurEditors() {
            // Make sure UI is closed for last editor that was active.
            const focused = document.querySelector('.ck-focused');
            if (focused) {
                focused.classList.remove('ck-focused');
            }
            const element = document.querySelector('.ck-balloon-panel_visible');
            if (element) {
                element.classList.remove('ck-balloon-panel_visible');
            }
        }

        // Close all dropdowns
        window.addEventListener("click", function () {
            parent.closeDropDowns();
        });

        window.addEventListener("keydown", (event) => {
            if (event.isComposing || event.keyCode === 229) {
                return;
            }

            // Handle CTRL-S to save changes
            if (event.ctrlKey || event.metaKey) {
                switch (String.fromCharCode(event.which).toLowerCase()) {
                    case 's':
                        event.preventDefault();
                        if (editor === null) {
                            parent.saveChanges();
                        } else {
                            parent.SaveEditorRegion(editor.getData(), editor.sourceElement.getAttribute("data-ccms-ceid"));
                        }
                        break;
                }
            }
        });

    </script>

    <script asp-append-version="true" src="~/lib/popper/umd/popper.min.js"></script>
    <script asp-append-version="true" src="~/lib/tippy/tippy.umd.min.js"></script>
    <script asp-append-version="true" type="module" src="~/lib/cosmos/ckeditor/ckeditor-widget.js"></script>
    <script asp-append-version="true" src="/lib/cosmos/image-widget/image-widget.js"></script>

    <script>
        const elements = document.querySelectorAll('[data-ccms-ceid]');
        elements.forEach(function (el, index) {
            el.setAttribute("data-tippy-content", "Editable.")
        });

        // NodeList
        let __cwps__toolTips = tippy(elements, {
            placement: "right-start",
            inlinePositioning: true,
        }); //data-ccms-ceid

    </script>
</body>
</html>