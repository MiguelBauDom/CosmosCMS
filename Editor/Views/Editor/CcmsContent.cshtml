@using Microsoft.AspNetCore.Components
@model Cosmos.Common.Models.ArticleViewModel
@{
    Layout = null;
    ViewData["Title"] = Model.Title;

    var data = new ImportMapDefinition(
        new Dictionary<string, string>()
                                {
            { "ckeditor5", "/lib/ckeditor/ckeditor5.js" },
            { "ckeditor5/", "/lib/ckeditor/" },

            { "filelink", "/lib/cosmos/ckeditor/filelink/filelink.js" },
            { "filelink/", "/lib/cosmos/ckeditor/filelink/" },

            { "insertimage", "/lib/cosmos/ckeditor/insertimage/insertimage.js" },
            { "insertimage/", "/lib/cosmos/ckeditor/insertimage/" },

            { "pagelink", "/lib/cosmos/ckeditor/pagelink/pagelink.js" },
            { "pagelink/", "/lib/cosmos/ckeditor/pagelink/" },

            { "signalr", "/lib/cosmos/ckeditor/signalr/signalr.js" },
            { "signalr/", "/lib/cosmos/ckeditor/signalr/" },

            { "vscodeeditor", "/lib/cosmos/ckeditor/vscodeeditor/vscodeeditor.js" },
            { "vscodeeditor/", "/lib/cosmos/ckeditor/vscodeeditor/" },
                                },
        null,
        null);
}
<!DOCTYPE HTML>
<html lang="@Model.LanguageCode">
<head>
    <title>@Model.Title</title>
    <meta name="cwps-meta-path-title" content="@Model.Title" />
    <meta name="cwps-meta-path-url" content="@Model.UrlPath" />
    <meta name="cwps-meta-path-updated" content="@Model.Updated" />
    <style>
        figure.media {
            width: 640px;
        }

        .ck.ck-block-toolbar-button {
            transform: translateX( 30px ) translateY( -80px ) !important;
            background-color: white !important;
            border: 3px solid blue !important;
        }

    </style>
    @Html.Raw(Model.Layout.Head)
    <link rel="stylesheet" href="https://cdn.ckeditor.com/ckeditor5/44.1.0/ckeditor5.css" />
    <link href="https://unpkg.com/filepond@4/dist/filepond.css" rel="stylesheet" />
    <link href="https://unpkg.com/filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css" rel="stylesheet" />
    <link href="https://unpkg.com/filepond-plugin-image-edit/dist/filepond-plugin-image-edit.css" rel="stylesheet" />
    @Html.Raw(Model.HeadJavaScript)
    @Html.Raw(JavaScriptSnippet.FullScript)
</head>
<body>
    @Html.Raw(Model.Layout.HtmlHeader)
    <div ccms-content-id="@Model.Id">
        @Html.Raw(Model.Content)
    </div>
    @Html.Raw(Model.Layout.FooterHtmlContent)
    @Html.Raw(Model.FooterJavaScript)
    @Html.AntiForgeryToken()
    <script type="importmap" asp-importmap="@data">
    </script>
    <link href="~/lib/cropperjs/cropper.min.css" rel="stylesheet" asp-append-version="true" />
    <script src="~/lib/cropperjs/cropper.min.js" asp-append-version="true"></script>
    <script src="https://unpkg.com/filepond-plugin-file-metadata/dist/filepond-plugin-file-metadata.js"></script>
    <script src="https://unpkg.com/filepond-plugin-file-validate-type/dist/filepond-plugin-file-validate-type.js"></script>
    <script src="https://unpkg.com/filepond-plugin-image-edit/dist/filepond-plugin-image-edit.js"></script>
    <script src="https://unpkg.com/filepond-plugin-image-preview/dist/filepond-plugin-image-preview.js"></script>
    <script src="https://unpkg.com/filepond-plugin-image-exif-orientation/dist/filepond-plugin-image-exif-orientation.js"></script>
    <script src="https://unpkg.com/filepond-plugin-image-validate-size/dist/filepond-plugin-image-validate-size.js"></script>
    <script src="https://unpkg.com/filepond-plugin-image-crop/dist/filepond-plugin-image-crop.js"></script>
    <script src="https://unpkg.com/filepond/dist/filepond.js"></script>
    <script>

        // Create editors
        var ccms_editors = [];
        var ccms_editorIds = [];
        var focusedEditor;
        var unmoutCkBox;
        var articleNumber = @Model.ArticleNumber;
        let autosaveTimeout = null;

        // Blur editors
        window.addEventListener('blur', function() {
            blurEditors();
        });

        // Blur editors
        function blurEditors() {
            ccms_editors.forEach(function (editor, index) {
                editor.sourceElement.classList.remove('ck-focused');
                editor.ui.view.toolbar.destroy();
            });
            let element = document.querySelector('.ck-balloon-panel_visible');
            if (element) {
                element.classList.remove('ck-balloon-panel_visible');
            }
        }

        function blurOthers(editor) {
            const guid = editor.sourceElement.getAttribute("data-ccms-ceid");
            ccms_editors.forEach(function (editor, index) {
                if (editor.sourceElement.getAttribute("data-ccms-ceid") !== guid) {
                    // To remove focus
                    editor.sourceElement.blur();
                }
            });
        }

        // Close all dropdowns
        window.addEventListener("click", function () {
            parent.closeDropDowns();
        });

        // Click outside of the editor, force blur of editors.
        document.addEventListener('click', function(event) {
            // Check if the clicked element is outside the div with the class 'my-div'
            if (!event.target.closest('.ck-content')) {
               blurEditors();
            }
        });

        window.addEventListener("keydown", (event) => {
            if (event.isComposing || event.keyCode === 229) {
                return;
            }

            // Handle CTRL-S to save changes
            if (event.ctrlKey || event.metaKey) {
                switch (String.fromCharCode(event.which).toLowerCase()) {
                    case 's':
                        event.preventDefault();

                        parent.saving();

                        if (editor === null) {
                            parent.saveChanges();
                        } else {
                            const data = editor.getData();
                            parent.saveChanges(data, editor.sourceElement.getAttribute("data-ccms-ceid"));
                        }
                        break;
                }
            }
        });
    </script>

    <script src="@Html.Raw("https://unpkg.com/@popperjs/core@2")"></script>
    <script src="@Html.Raw("https://unpkg.com/tippy.js@6")"></script>

    <script type="module" src="~/lib/cosmos/ckeditor/main.js" asp-append-version="true"></script>

    <script>
        const elements = document.querySelectorAll('[data-ccms-ceid]');
        elements.forEach(function (el, index) {
            el.setAttribute("data-tippy-content", "Editable.")
        });

        // NodeList
        let __cwps__toolTips = tippy(elements, {
            placement: "right-start",
            inlinePositioning: true,
        }); //data-ccms-ceid

        // We want to preview images, so we register
        // the Image Preview plugin, We also register
        // exif orientation (to correct mobile image
        // orientation) and size validation, to prevent
        // large files from being added
        FilePond.registerPlugin(
          FilePondPluginFileMetadata,
          FilePondPluginImagePreview,
          FilePondPluginImageExifOrientation,
          FilePondPluginImageValidateSize,
          FilePondPluginImageEdit
        );

        function getImageDimensions(blob, callback) {
            const reader = new FileReader();
            reader.onload = function(e) {
                const img = new Image();
                img.onload = function() {
                    const dimensions = {
                        width: img.naturalWidth,
                        height: img.naturalHeight
                    };
                    callback(dimensions);
                };
                img.src = e.target.result;
            };
            reader.readAsDataURL(blob);
        }

        const imgholders = document.querySelectorAll(".imgholder");

        const ponds = document.querySelectorAll('.filepond');

        ponds.forEach(function (el, index) {

            let pond = FilePond.create(el,
                {
                    acceptedFileTypes: ['image/*']
                });

            pond.setOptions({
                server: "@Url.Action("UploadImage", "FileManager")"
            });

            pond.on('addfile', (error, file) => {
                file.setMetadata("Path", "/pub/articles/@Model.ArticleNumber/");
                file.setMetadata("RelativePath", "");
                file.setMetadata("fileName", file.filename.toLowerCase());
                getImageDimensions(file.file, function(dimensions) {
                    file.setMetadata('imageWidth', dimensions.width);
                    file.setMetadata('imageHeight', dimensions.height);
                });
            });

            pond.on('processfilestart', (e) => {
                const metadata = e.getMetadata();
            });

            pond.on('processfile', (error, file) => {
                const f = file;
                const fileName = file.getMetadata("fileName");
                const relativePath = "/pub/articles/@Model.ArticleNumber/" + fileName;
                const img = document.getElementById("image-1");
                img.src = relativePath;
            });


            pond.on('removefile', (file) => {
                const f = file;
            });
        });
    </script>
</body>
</html>